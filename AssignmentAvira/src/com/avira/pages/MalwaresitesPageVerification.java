package com.avira.pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import com.avira.base.setup.BaseSetUpClass;

/**
 * Page class for Malware Sites
 * 
 * @author chetanit
 *
 */
public class MalwaresitesPageVerification extends BaseSetUpClass {
	public static String EXPECTED_TITLE_FOR_PHISINGPAGE = properties.get("EXPECTED_TITLE_PHISING");

	public MalwaresitesPageVerification(WebDriver driver) {
		this.driver = driver;
	}

	/**
	 * Verify elements in phising web page
	 * 
	 * @throws Exception
	 */
	public void verifyPhisingMessageOnPage() throws Exception {
		Assert.assertTrue(driver.findElement(By.xpath(properties.get("PHISING_WEB_PAGE"))).isDisplayed());
	}

	/**
	 * Method provides add exception to the web page and navigation to phishy
	 * /dangerous/malware sites
	 * 
	 * @throws Exception
	 */
	public void verifyingAddingExceptionOnMalwareSites() throws Exception {
		WebDriverWait wait = new WebDriverWait(driver, 50);
		driver.findElement(By.xpath(properties.get("MORE_OPTION"))).click();
		driver.findElement(By.xpath(properties.get("ADD_EXCEPTION"))).click();
		driver.findElement(By.xpath(properties.get("CONTINUE_ANYWAY"))).click();
		Assert.assertTrue((driver.findElement(By.xpath(properties.get("PHISING_WEB_PAGE")))).isDisplayed());

	}

}
